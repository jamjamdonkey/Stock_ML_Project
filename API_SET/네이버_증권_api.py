# -*- coding: utf-8 -*-
"""네이버_증권_api.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cGxdWXXolYTq4Qy8AKSYjJiuqG1MLxW-
"""

import requests
import pandas as pd
import re

class NaverStockAPI:
    def __init__(self):
        self.base_url = "https://m.stock.naver.com/api/stock"

    def clean_market_cap(self, market_cap_str):
        # 시가총액 "358조 1,381억" → 원 단위 숫자 (int)
        if not market_cap_str:
            return None
        조_match = re.search(r"([\d,\.]+)조", market_cap_str)
        억_match = re.search(r"([\d,\.]+)억", market_cap_str)

        조 = float(조_match.group(1).replace(",", "")) if 조_match else 0
        억 = float(억_match.group(1).replace(",", "")) if 억_match else 0

        # 조 * 1조(10^12) + 억 * 1억(10^8)
        total_원 = int(조 * 10**12 + 억 * 10**8)
        return total_원

    def clean_number_with_units(self, num_str):
        # "11.72배", "5,162원" 등 숫자만 추출하여 float로 변환
        if not num_str:
            return None
        cleaned = re.sub(r"[^\d\.]", "", num_str)
        try:
            return float(cleaned.replace(",", ""))
        except:
            return None

    def get_today_stock_info(self, stock_code):
        url = f"{self.base_url}/{stock_code}/integration"
        try:
            response = requests.get(url)
            response.raise_for_status()
            data = response.json()

            종목명 = data.get("stockName", "")
            total_infos = data.get("totalInfos", [])
            deal_trends = data.get("dealTrendInfos", [])

            def find_value(code):
                for info in total_infos:
                    if info.get("code") == code:
                        return info.get("value", "")
                return ""

            trend = deal_trends[0] if deal_trends else {}

            raw_market_cap = find_value("marketValue")
            raw_per = find_value("per")
            raw_eps = find_value("eps")

            stock_info = {
                "종목코드": stock_code,
                "종목명": 종목명,
                "날짜": trend.get("bizdate", ""),
                "시작가": find_value("openPrice"),
                "전일가": find_value("lastClosePrice"),
                "정적_거래량": find_value("accumulatedTradingVolume"),
                "시가총액": self.clean_market_cap(find_value("marketValue")),
                "PER": self.clean_number_with_units(find_value("per")),
                "EPS": self.clean_number_with_units(find_value("eps")),
                "52주최고": find_value("highPriceOf52Weeks"),
                "52주최저": find_value("lowPriceOf52Weeks"),
                "종가": trend.get("closePrice", ""),
                "전일대비": trend.get("compareToPreviousClosePrice", ""),
                "외국인순매수": trend.get("foreignerPureBuyQuant", ""),
                "기관순매수": trend.get("organPureBuyQuant", ""),
                "개인순매수": trend.get("individualPureBuyQuant", ""),
                "동적_거래량": trend.get("accumulatedTradingVolume", "")
            }

            # 숫자형 변환 적용
            stock_info["시가총액_원"] = self.clean_market_cap(raw_market_cap)
            stock_info["PER_숫자"] = self.clean_number_with_units(raw_per)
            stock_info["EPS_숫자"] = self.clean_number_with_units(raw_eps)

            return stock_info

        except requests.exceptions.RequestException as e:
            print(f"[에러] API 호출 실패: {e}")
            return None

    def get_today_multiple_stocks(self, stock_codes):
        results = []
        for code in stock_codes:
            info = self.get_today_stock_info(code)
            if info:
                results.append(info)
        return pd.DataFrame(results)

# 사용 예제
if __name__ == "__main__":
    api = NaverStockAPI()
    df = api.get_today_multiple_stocks(["005930", "000660", "207940", "373220", "035420", "034020", "105560", "012450", "005380", "329180", "005935", "000270", "068270", "035720", "055550", "009540", "028260", "042660", "012330", "032830", "402340", "086790", "011200", "015760", "064350", "005490", "138040", "000810", "323410", "267260", "259960", "010130", "316140", "096770", "033780", "010140", "018260", "051910", "034730", "024110", "006400", "003550", "030200", "352820", "006800", "066570", "377300", "017670", "079550", "272210"])

df

import os
from datetime import datetime

# 오늘 날짜 문자열
today = datetime.today().strftime('%Y%m%d')

# 절대 경로 기준 CSV 폴더 설정
csv_folder = r"C:/Users/JAMJAM/Stock_Project/Stock_Project/CSV"

# 폴더 없으면 생성
os.makedirs(csv_folder, exist_ok=True)

# 저장 파일명 + 경로
file_name = f"API{today}.csv"
file_path = os.path.join(csv_folder, file_name)

# 저장
df.to_csv(file_path, index=False, encoding="utf-8-sig")

print(f"CSV 저장 완료: {file_path}")

from datetime import datetime
df["종목코드"] = df["종목코드"].astype(str)
today = datetime.today().strftime("%Y%m%d")
df.to_csv(f"네이버api_{today}.csv", index=False, encoding="utf-8-sig")

